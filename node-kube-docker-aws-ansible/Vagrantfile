require 'fileutils'
# read JSON file
aws_cfg = JSON.parse(File.read("aws.json"))

# read and store env vars
keypair_name = ENV['AWS_KEYPAIR_NAME']
access_key_id = ENV['AWS_ACCESS_KEY']
secret_access_key = ENV['AWS_SECRET_KEY']
security_groups = ENV['AWS_SECURITYGROUP']
private_key_path = ENV['AWS_KEYPATH']

# count of machines to initialize
machineCount = aws_cfg['ec2s'].length
# counter
counter = 0

Vagrant.configure(2) do |config|

  # loop through each node of JSON
  aws_cfg['ec2s'].each do |node|
    
    node_name = node[0]
    node_value = node[1]

    # configure this node
    config.vm.define node_name do |config2|

      config2.vm.box = "lattice/ubuntu-trusty-64"

      ######
      # this block is aws-specific config
      # it will not execute when using virtualbox
      # provider
      ######
      # node tags
      ec2_tags = node_value['tags']

      config2.vm.provider :aws do |ec2, override|
        ec2.keypair_name = keypair_name
        ec2.access_key_id = access_key_id
        ec2.secret_access_key = secret_access_key
        ec2.security_groups = security_groups
        override.ssh.private_key_path = private_key_path

        # read region, ami etc from json.
        # default(Mumbai) region, Amazon Linux, T2 Micro
        # (this combination is known to work)
        ec2.region = aws_cfg['region']
        ec2.availability_zone = aws_cfg['region']+aws_cfg['availability_zone']
        ec2.ami = node_value['ami_id']
        ec2.instance_type = node_value['instance_type']
        override.ssh.username = aws_cfg['ssh_username']

        ec2.tags = {
          'Name'         => ec2_tags['Name'],
          'Role'         => ec2_tags['Role'],
        }

      end # config2.vm.provider :aws

      counter += 1
      if counter == machineCount
        # use ansible to run a playbook.
        
        config2.vm.provision "ansible" do |ansible|

          # path to roles directory of ansible-kubernetes
          ansible_kube_role_path = "roles/ansible-roles/ansible-kubernetes/roles"
          # we will use this inventory folder
          # this folder also contains group_vars needed for kubernetes
          ansible_inventory_path = "./inventory/vagrant_ansible_inventory"
          # copy autogenerated inventory to inventory folder
          FileUtils.cp(".vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory","#{ansible_inventory_path}")
          # install dependent roles from requirements.yml
          # using ansible-galaxy
          ansible.galaxy_role_file = "./requirements.yml"
          ansible.galaxy_roles_path = "./roles:./#{ansible_kube_role_path}"
          #custom inventory path
          ansible.inventory_path = "./#{ansible_inventory_path}"
          
          ansible.groups = {
            "masters" => ["master0"],
            "etcd" => ["etcd0"],
            "nodes" => ["master0","worker0"]
          }

          ansible.verbose = "vvvv"
          ansible.limit = "all"
          ansible.playbook = "playbook.yml"
        end

      end

    end # config.vm.define node_name
  end # aws_cfg['ec2s']
  
end
